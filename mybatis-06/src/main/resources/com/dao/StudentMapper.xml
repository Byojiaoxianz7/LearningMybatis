<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.StudentMapper">
    <!--查询所有学生，但是 teacher=null -->
    <!--<select id="getStudent" resultType="com.pojo.Student">-->
    <!--    select * from student-->
    <!--</select>-->

    <!--
        解决思路：
            1. 查询所有学生
            2. 根据查询出来的学生的 tid，寻找对应的老师

            按照查询嵌套处理
     -->
    <!--
        步骤
            1. 查学生
            2. 查老师
            3. 嵌套子查询
    -->
    <select id="getStudent" resultMap="StudentTeacher">select * from student</select>
    <resultMap id="StudentTeacher" type="com.pojo.Student">
        <!--复杂的属性，需要单独处理, 对象用 association，集合：collection，这里返回的是一个Teacher对象，所有用association-->
        <!--property在Student实体类里是teacher, 在数据中是tid-->
        <association property="teacher" column="tid" javaType="com.pojo.Teacher" select="getTeacher"/>
    </resultMap>
    <select id="getTeacher" resultType="com.pojo.Teacher">select * from teacher where id = ${id}</select>


    <!--
        按照结果嵌套处理
        解决思路：
        1. 查询所有学生
        2. 根据查询出来的学生的 tid，寻找对应的老师
    -->
    <!--
        步骤
            查询语句写完之后，去对应里面的每一项的关系
    -->
    <select id="getStudent2" resultMap="StudentTeacher2">
        select s.id sid, s.name sname, t.id tid,  t.name tname
        from student s, teacher t
        where s.tid = t.id;
    </select>
    <resultMap id="StudentTeacher2" type="com.pojo.Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="com.pojo.Teacher">
            <result property="id" column="tid"/>
            <result property="name" column="tname"/>
        </association>
    </resultMap>

</mapper>